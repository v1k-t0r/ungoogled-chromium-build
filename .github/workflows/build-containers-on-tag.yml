---
name: Build Tagged Image

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
  push:
    tags:
      - "*"

jobs:
  prepare:
    runs-on: self-hosted
    outputs:
      output1: ${{ steps.tagging.outputs.chromium_tag }}
    steps:
      # - name: cleanup #https://github.com/actions/checkout/issues/211
      #   run: |
      #     sudo chown -R $USER:$USER $GITHUB_WORKSPACE
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Checkout submodules
        run: git submodule update --remote --merge
      - id: tagging
        run: echo "chromium_tag=$(echo -n $(cat ungoogled-chromium/chromium_version.txt))" >> $GITHUB_OUTPUT

  build-container-image:
    needs: prepare
    runs-on: self-hosted
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: docker
          file: docker/Dockerfile
          cache-from: type=gha,scope=ug-chromium
          cache-to: type=gha,scope=ug-chromium,mode=max
          load: true
          tags: |
            ug-chromium-builder:${{env.DOCKER_IMAGE_TAG}}
            ug-chromium-builder:latest
        env:
          DOCKER_IMAGE_TAG: ${{needs.prepare.outputs.output1}}

  build-browser:
    needs: [prepare, build-container-image]
    timeout-minutes: 900
    runs-on: self-hosted
    steps:
      - name: Browser build stage
        run: |
          docker run -v `pwd`:/repo:z ug-chromium-builder:$DOCKER_IMAGE_TAG bash -c "./build.sh"
        env:
          DOCKER_IMAGE_TAG: ${{needs.prepare.outputs.output1}}

  package-browser:
    needs: [prepare, build-browser]
    runs-on: self-hosted
    steps:
      - name: Browser package stage
        run: |
          docker run -v `pwd`:/repo:z ug-chromium-builder:$DOCKER_IMAGE_TAG bash -c "cd package && ./package.sh"
        env:
          DOCKER_IMAGE_TAG: ${{needs.prepare.outputs.output1}}

  create-release:
    if: needs.build-browser.result == 'success'
    needs: [prepare, build-browser, package-browser]
    runs-on: self-hosted
    steps:
      - name: Upload release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "ungoogled-chromium_*"
          artifactContentType: application/gzip
          omitBodyDuringUpdate: false
          omitName: true
          omitNameDuringUpdate: true
          tag: ${{env.DOCKER_IMAGE_TAG}}
        env:
          DOCKER_IMAGE_TAG: ${{needs.prepare.outputs.output1}}
